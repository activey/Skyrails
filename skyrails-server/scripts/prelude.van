////////////////// def values ////////////////////////////////////////////////////
// default values
g_activecounter = 400000;
g_pull = 0.02; 
g_globeness = 0.0005; 
g_diameter = 1.0;
setfov 90.0;
//g_usex27 = false;
setinversion false;
//g_sb_brightness = 1.0;
setskybox "matrix" "jpg";
////////////////// menu file for skyrails ////////////////////////////////////////////////////

one -- links -> two;
//two -- links -> three;
//three -- links -> one;
g1 <<group: one;
g1 <<group: two;
//g1 <<group: three;

with all aggregators do (
   itemsize 3.0;
   itemcolor rgb:30 30 30;
   itemtexture name "textures/emptycircle.gif";
) end;

////////////////// menu file for skyrails ////////////////////////////////////////////////////
sub theme_normalcolor (
   setskybox "fae04dark" "jpg";
   g_sb_brightness = 0.2;
   
   colortheme "cirrusColor"             rgb: 100 100 100   ;
   colortheme "solidColor1"             rgb: 30 30 30   ;
   colortheme "solidColor2"             rgb: 50 50 50   ;
   colortheme "uiForeColor"             rgb: 150 150 150   ;
   colortheme "uiHighColor"             rgb: 190 180 130   ;
   colortheme "actionColor"             rgb: 0 90 0   ;
   colortheme "importantColor"          rgb: 90 60 0   ;
   
   colortheme "selColor"                rgb: 25 63 75   ;
   colortheme "selFontColor"            rgb: 0 0 0   ;
   colortheme "activeBlinkColor"        rgb: 0 220 220   ;
   colortheme "linkHoverBackColor"      rgb: 0 0 0   ;
   colortheme "linkHoverColor"          rgb: 100 255 255   ;
   colortheme "linkPressBackColor"      rgb: 0 125 175   ;
   colortheme "linkPressColor"          rgb: 0 0 0   ;
   
   colortheme "tooltipTextColor"        rgb: 100 100 100   ;
   colortheme "tooltipBackColor"        rgba: 0 0 120 190  ;
   
   colortheme "x27ActiveBoxColor"       rgb: 37 37 50   ;
   colortheme "x27InactiveBoxColor"     rgb: 37 37 37   ;
   
   colortheme "defaultNodeColor"        rgb: 0 200 0   ;
   colortheme "defaultNodeLabelColor"   rgb: 200 200 200   ;
   
   colortheme "defaultLineColor"        rgb: 0 60 60   ;
   colortheme "defaultAlphaLineColor"   rgb: 0 0 50 ;
   
   colortheme "selectNodeColor"        rgb: 200 50 0   ;
   colortheme "selectNodeLabelColor"   rgb: 225 100 50   ;
   
   colortheme "selectLineColor"        rgb: 100 60 60   ;
   colortheme "selectAlphaLineColor"   rgb: 50 0 0 ;
   
   colortheme "nodeHoverColor"        rgb: 0 0 0   ;
   colortheme "mouseGestureColor"     rgb: 0 255 255 ;
   colortheme "mouseGuideColor"       rgb: 150 150 150 ;
   
);

sub theme_desertcolor (
   setskybox "desert" "jpg";
   g_sb_brightness = 0.3;
   
   colortheme "cirrusColor"             rgb: 0 0 0   ;
   colortheme "solidColor1"             rgb: 0 0 0   ;
   colortheme "solidColor2"             rgb: 20 10 0   ;
   colortheme "uiForeColor"             rgb: 150 150 150   ;
   colortheme "actionColor"             rgb: 0 90 0   ;
   colortheme "importantColor"          rgb: 90 60 0   ;
   
   colortheme "selColor"                rgb: 75 63 25   ;
   colortheme "selFontColor"            rgb: 0 0 0   ;
   colortheme "activeBlinkColor"        rgb: 220 220 170   ;
   colortheme "linkHoverBackColor"      rgb: 0 0 0   ;
   colortheme "linkHoverColor"          rgb: 170 170 130   ;
   colortheme "linkPressBackColor"      rgb: 175 125 0   ;
   colortheme "linkPressColor"          rgb: 0 0 0   ;
   
   colortheme "tooltipTextColor"        rgb: 100 100 0   ;
   colortheme "tooltipBackColor"        rgba: 0 0 0 220 ;
   
   colortheme "x27ActiveBoxColor"       rgb: 50 37 37   ;
   colortheme "x27InactiveBoxColor"     rgb: 37 37 37   ;
   
   colortheme "defaultNodeColor"        rgb: 0 0 0   ;
   colortheme "defaultNodeLabelColor"   rgb: 200 180 0   ;
   
   colortheme "defaultLineColor"        rgb: 0 0 0   ;
   colortheme "defaultAlphaLineColor"   rgb: 0 0 0 ;
   
   colortheme "selectNodeColor"        rgb: 20 20 20   ;
   colortheme "selectNodeLabelColor"   rgb: 200 200 200   ;
   
   colortheme "selectLineColor"        rgb: 70 70 0   ;
   colortheme "selectAlphaLineColor"   rgb: 30 30 0 ;
   
   colortheme "nodeHoverColor"        rgb: 80 0 0   ;
   colortheme "mouseGestureColor"     rgb: 255 180 0 ;
   colortheme "mouseGuideColor"       rgb: 190 0 0 ;
   
);

sub theme_natural (
   setskybox "valley" "jpg";
   g_sb_brightness = 0.3;
   colortheme "selColor"                rgb: 75 63 25   ;
   colortheme "selFontColor"            rgb: 0 0 0   ;
   colortheme "activeBlinkColor"        rgb: 220 220 170   ;
   colortheme "linkHoverBackColor"      rgb: 0 0 0   ;
   colortheme "linkHoverColor"          rgb: 170 170 130   ;
   colortheme "linkPressBackColor"      rgb: 175 125 0   ;
   colortheme "linkPressColor"          rgb: 0 0 0   ;
   
   colortheme "tooltipTextColor"        rgb: 100 100 100   ;
   colortheme "tooltipBackColor"        rgba: 90 20 10 160 ;
   
   colortheme "x27ActiveBoxColor"       rgb: 50 50 37   ;
   colortheme "x27InactiveBoxColor"     rgb: 37 37 37   ;
   
   colortheme "defaultNodeColor"        rgb: 70 0 0   ;
   colortheme "defaultNodeLabelColor"   rgb: 200 180 0   ;
   
   colortheme "defaultLineColor"        rgb: 40 40 40   ;
   colortheme "defaultAlphaLineColor"   rgb: 0 0 0 ;
   
   colortheme "selectNodeColor"        rgb: 100 100 0   ;
   colortheme "selectNodeLabelColor"   rgb: 200 200 200   ;
   
   colortheme "selectLineColor"        rgb: 80 0 0   ;
   colortheme "selectAlphaLineColor"   rgb: 0 0 0 ;
   
   colortheme "nodeHoverColor"        rgb: 0 0 0   ;
   colortheme "mouseGestureColor"     rgb: 255 255 0 ;
   colortheme "mouseGuideColor"       rgb: 150 150 150 ;
   
);

sub theme_openspace (
   setskybox "sunrise" "jpg";
   g_sb_brightness = 0.3;
   colortheme "selColor"                rgb: 25 63 75   ;
   colortheme "selFontColor"            rgb: 0 0 0   ;
   colortheme "activeBlinkColor"        rgb: 170 170 220   ;
   colortheme "linkHoverBackColor"      rgb: 0 0 0   ;
   colortheme "linkHoverColor"          rgb: 170 170 170   ;
   colortheme "linkPressBackColor"      rgb: 0 125 170   ;
   colortheme "linkPressColor"          rgb: 0 0 0   ;
   
   colortheme "tooltipTextColor"        rgb: 100 100 100   ;
   colortheme "tooltipBackColor"        rgba: 0 0 0 160 ;
   
   colortheme "x27ActiveBoxColor"       rgb: 37 37 37   ;
   colortheme "x27InactiveBoxColor"     rgb: 37 37 37   ;
   
   colortheme "defaultNodeColor"        rgb: 20 20 20   ;
   colortheme "defaultNodeLabelColor"   rgb: 0 180 200   ;
   
   colortheme "defaultLineColor"        rgb: 0 0 0   ;
   colortheme "defaultAlphaLineColor"   rgb: 0 0 10 ;
   
   colortheme "selectNodeColor"        rgb: 20 20 20   ;
   colortheme "selectNodeLabelColor"   rgb: 200 200 200   ;
   
   colortheme "selectLineColor"        rgb: 0 0 80   ;
   colortheme "selectAlphaLineColor"   rgb: 0 0 0 ;
   
   
   colortheme "nodeHoverColor"        rgb: 0 0 0   ;
   colortheme "mouseGestureColor"     rgb: 180 180 255 ;
   colortheme "mouseGuideColor"       rgb: 150 150 150 ;
   
);

////////////////// main menu  ////////////////////////////////////////////////////


with ui:bottomdock do (
   color (@solid, 0.6);
   settexture (@ "uitexes/largebuttonbox.png");
   setmargin (@25);
   maketextlet (@ dockicons);
   align(@ "end", "start");
   
   ui:dockicons ::> (
   
      mi:vertical true;
   
      //menuicon "graphrun" "icons/gears.gif";
      //mi:rotspeed 2.0;
      //mi:size 32 32;
      //mi:hoversize 64 64;
      //mi:link (./prelude_freezegraph);
      
      menulink " settings " (menushow settingsmenu);
      //menuicon "settings" "icons/tools.gif";
      //mi:link (menushow settingsmenu);
      //mi:tooltip "show miscellaneous settings panel";
      //mi:size 32 32;
      //mi:hoversize 64 64;
      
      menulink " themes " (menushow themesmenu);
      //menuicon "themes" "icons/eye.gif";
      //mi:link (menushow themesmenu);
      //mi:tooltip "show themes panel";
      //mi:size 32 32;
      //mi:hoversize 64 64;
           
   );
   
) end;

//menushow mainmenu;

sub prelude_freezegraph(
   with ui:bottomdock.dockicons do(
      mi:select "graphrun";
      mi:rotspeed 0.0;
      mi:link (./prelude_rungraph);
      mi:tooltip "The graph layout system is not running";
      mi:tooltip "Click this icon to activate the graph layout system";
      g_activecounter = 20;
   ) end;
);

sub prelude_rungraph(
   with ui:bottomdock.dockicons do(
      mi:select "graphrun";
      mi:rotspeed 2.0;
      mi:link (./prelude_freezegraph);
      mi:tooltip "The graph layout system is currently running";
      mi:tooltip "Click this icon to freeze the graph layout system";
      g_activecounter = 4000000;
   ) end;
);

//./prelude_rungraph;

////////////////// help menu  ////////////////////////////////////////////////////
with ui:helpbox do (
   color (@solid, 0.6);
   settexture (@ "uitexes/largebuttonbox.png");
   setmargin (@25);
   maketextlet (@ helpview);
   align(@ center, center);
   
   ui:helpview ::> (
//      menuicon "graphrun" "uitexes/helpfile.png";
      menuicon "graphrun" "ppitexes/helpfile.png";
      mi:size 600 300;
      mi:link (with ui:helpbox do hide(@) end);
   );
   
   hide (@);
) end;

sub showhelpbox (
   with ui:helpbox do unhide(@) end;
);


////////////////// graph menu  ////////////////////////////////////////////////////
menudef graphsettingsmenu [6](
   menucolor rgba: 0 0 0 150;
   menutext " modes : ";
   menulink " freeze " (
      g_activecounter = 100
   );
   menutooltip "freeze the graph";
   menulink " unfreeze " (
      g_activecounter = 400000
   );
   menutooltip "unfreeze the graph";
   menulink " structural " (
      g_pull = 0.02; 
      g_globeness = 0.0005; 
      g_diameter = 1.0;
   );
   menutooltip "activate standard structural layout";
   menulink " globular " (
      g_pull = 0.02; 
      g_globeness = 0.05; 
      g_diameter = 12.0
   );
   menutooltip "activate standard globular layout";
   menulink " (hide) " (menuhide graphsettingsmenu);
   menutooltip "hide graph panel";
);
////////////////// descriptions menu  ////////////////////////////////////////////////////
menudef settingsmenu [6](
   menucolor rgba: 00 00 00 150;
   menutext " ";
   /*
   menulink "x27draw:" ();
   menutooltip "The graph drawing utilises the FADE algorithm, where nodes are ";
   menutooltip "stored into a space partitioning tree to increase efficiency in ";
   menutooltip "layouting. Due to design choices, a 27 tree (3x3x3, or x27) is ";
   menutooltip "used, and hence this name is used";
   menulink "on" (
      g_drawx27 = true;
   );
   menutooltip "enable x27 drawing";
   menutext "|";
   menulink "off" (
      g_drawx27 = false;
   );
   menutooltip "disable x27 drawing";
   
//   menulink " FADE:" ();
   //menutooltip "Turn on / off the FADE algorithm. Benefits don't kick in until";
   //menutooltip "a lot of nodes come.";
   menulink "on" (
      g_usex27 = true;
   );
   menutooltip "enable FADE";
   menutext "|";
   menulink "off" (
      g_usex27 = false;
   );
   menutooltip "disable FADE";
   */
   menulink " fov:" ();
   menutooltip "set the field of view / zoom level";
   menulink "15" (setfov 15.0);
   menutext "|";
   menulink "25" (setfov 25.0);
   menutext "|";
   menulink "45" (setfov 45.0);
   menutext "|";
   menulink "65" (setfov 65.0);
   menutext "|";
   menulink "90" (setfov 90.0);
   menutext "|";
   menulink "115" (setfov 115.0);
   
   menulink " inv:" ();
   menutooltip "inversion of colours";
   menulink "on" ( setinversion true; );
   menutext "|";
   menulink "off" ( setinversion false; );
   
   menulink " (hide) " (menuhide settingsmenu);
   menutooltip "hide settings panel";
);
////////////////// help menu  ////////////////////////////////////////////////////
menudef themesmenu [6] (
   menucolor rgba: 0 0 0 150;
   menutext " themes : ";
   menulink " normal " (./theme_normalcolor);
   menutooltip "The default theme. Modern space theme.";
   menulink " desert " (./theme_desertcolor);
   menutooltip "Artistically red theme. Highly visible horizon.";
   menulink " valley " (./theme_natural);
   menutooltip "Natural theme. Valley background.";
   menulink " openspace " (./theme_openspace);
   menutooltip "Open space theme. Refreshingly open.";
   menulink " (hide) " (menuhide themesmenu);
   menutooltip "hide themes panel.";
);

////////////////// init ////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////// utilfunctions ////////////////////////////////////////////////////
// c:estmax
// c:num
sub colorOnNumber(
   [( divor <- toint(c:estmax / 3.0);
      stepper <- toint(300 / c:estmax))] with (
      return rgb: (c:num * c:"stepper") ((c:num - c:divor) * c:stepper) ((c:num - 2*c:divor) * c:stepper);
   ) end;
);
////////////////// init ////////////////////////////////////////////////////
sub lowNumberColorSplit(
   switch (c:num) do(
      0 -> return rgb: 50 50 50;
      1 -> return rgb: 100 0 0;
      2 -> return rgb: 0 100 0;
      3 -> return rgb: 0 30 100;
      4 -> return rgb: 100 100 0;
      5 -> return rgb: 0 100 40;
      6 -> return rgb: 100 0 100;
      7 -> return rgb: 180 0 60;
      8 -> return rgb: 60 0 180;
      9 -> return rgb: 180 60 0;
      10 -> return rgb: 60 180 0;
   ) end;
   if(c:num < 0) then
      return rgb:0 0 0 
   end;
   return (./lowNumberColorSplit [(num <- c:num - 10)] * 0.7) + (rgb:20 20 20);
);
////////////////// init ////////////////////////////////////////////////////
sub clearproject(
   cleargraph;
   for i <- 10..20 do (
      menuclear c:i;
   ) end;
);
////////////////// init ////////////////////////////////////////////////////
sub gesture_select( // default definition
   usesel moo;
   clearsel moo;
   moo <<sel: c:focus;
);
////////////////// init ////////////////////////////////////////////////////
sub prelude_selectfocus(
   usesel moo;
   clearsel moo;
   moo <<sel: c:focus;
);
////////////////// init ////////////////////////////////////////////////////
sub prelude_selectadditive(
   usesel moo;
   moo <<sel: c:focus;
);
////////////////// init ////////////////////////////////////////////////////
sub prelude_usecamera(
   usesel none;
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
// note: Bookmark System
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_node_showBookmarkButton(
   thenode <<c: this;
   
   if(#isbookmarked == true) then (
      setemblem(@bookmarkremove, "textures/minussymbol.png", rgb:70 30 30, 1.0) ::> (
         thenode <<# c:thenode;
         gesture(@lL, prelude_emblem_removeBookmark, "remove bookmark");
      ); 
      removeemblem(@bookmarkadd);
   ) else (
      setemblem(@bookmarkadd, "textures/plussymbol.png", rgb:30 70 30, 1.0) ::> (
         thenode <<# c:thenode;
         gesture(@lL, prelude_emblem_addBookmark, "bookmark node");
      ); 
      removeemblem(@bookmarkremove);
   ) end;
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_emblem_addBookmark(
   c:focus ::> #thenode ::> (
      ./prelude_node_addToBookmark;
   );
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_emblem_removeBookmark(
   c:focus ::> #thenode ::> (
      ./prelude_node_removeFromBookmark;
   );
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_node_addToBookmark(
   
   prelude_nodeBookmarks <<set: this;
   
   isbookmarked <<# true;
   setemblem(@bookmarkmark, "textures/checksymbol.png", rgb:30 30 70, 1.0);
   
   ./prelude_node_showBookmarkButton;
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_node_removeFromBookmark(
   
   thenode <<c: this;
   
   set:prelude_nodeBookmarks ::> erase(@ c:thenode);
   
   isbookmarked <<# false;
   
   removeemblem(@bookmarkmark);
   
   ./prelude_node_showBookmarkButton;
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_node_hideBookmarkButton(
   removeemblem(@bookmarkadd);
   removeemblem(@bookmarkremove);
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_showBookmarkList(

   keys: "_bookmarks" ::> (
      cleardata(@);
   );
   
   set:prelude_nodeBookmarks.* ::> (
      thenode <<c: this;
      title <<mc: itemid;
      if (#bookmarkname != null) then (
         title <<c: #bookmarkname;
      ) end;
      
      desc <<mc: "";
      if(#bookmarkdesc != null) then (
         desc <<c: #bookmarkdesc;
      ) end;
      
      thecolor <<mc: getitemcolor;
      if(#bookmarkcolor != null) then (
         thecolor <<c: #bookmarkcolor;
      ) end;
      
      with keys:"_bookmarks" do (
         color(@ c:thecolor);
         action(@ c:title, 
                {"./gesture_select [(focus <- node:\"" + (c:thenode :: itemid) + "\")]"},
                  c:desc );
      ) end;
      
   );
   
   _keys ::> reset(@);
   _keys ::> pushRealm(@"_bookmarks");
   _keys ::> debugprint(@);
   
   // 1. collapse current menu system
   // 2. clear menu list for _bookmarks
   // 3. transfer menu
   // 4. show menu
   
   
   
);
//////////////////////////////////////////////////////////////////////////////////////////////////////
sub prelude_copyBookmarkToClipboard(

   _roen::clipboardcopy(@ "");

   set:prelude_nodeBookmarks.* ::> (
      thenode <<c: this;
      title <<mc: itemid;
      if (#bookmarkname != null) then (
         title <<c: #bookmarkname;
      ) end;
      
      desc <<mc: "";
      if(#bookmarkdesc != null) then (
         desc <<c: #bookmarkdesc;
      ) end;
      
      _roen::clipboardcopyadditive(@ c:title + " -- " + c:desc + "\n");
      
   );

);
//////////////////////////////////////////////////////////////////////////////////////////////////////
with keys:root do(
   submenu(@ "/m", "bookmarkmenu", "bookmarks menu");
) end;
//////////////////////////////////////////////////////////////////////////////////////////////////////
with keys:bookmarkmenu do (
   color(@ rgb: 20 70 20);
   action(@ "s", (> ./prelude_showBookmarkList; ), "list bookmarked nodes");
   color(@ rgb: 70 40 20);
   action(@ "c", (> ./prelude_copyBookmarkToClipboard; ), "copy bookmarks to clipboard");
) end;

//////////////////////////////////////////////////////////////////////////////////////////////////////

